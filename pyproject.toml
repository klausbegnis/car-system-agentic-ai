[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/car_system_agentic_ai"]

[project]
name = "car-system-agentic-ai"
version = "0.1.0"
description = "An agentic AI system for car management and automation"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Klaus", email = "kbegnis23@gmail.com"},
]
keywords = ["ai", "automotive", "agents", "car-system"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]

ai = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "tiktoken>=0.5.0",
]

web = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.0",
]

all = [
    "car-system-agentic-ai[dev,ai,web]"
]

[project.urls]
Homepage = "https://github.com/klaus/car-system-agentic-ai"
Repository = "https://github.com/klaus/car-system-agentic-ai"
Issues = "https://github.com/klaus/car-system-agentic-ai/issues"

[project.scripts]
car-system = "car_system_agentic_ai.cli:main"

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
    "jupyter>=1.1.1",
    "ruff>=0.13.0",
]

[tool.ruff]
line-length = 80
target-version = "py39"

[tool.ruff.lint]
# Conjunto curado (evita o "ALL" ser excessivo)
select = [
  "E",   # pycodestyle (PEP8)
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort (ordenação de imports)
  "N",   # pep8-naming
  "B",   # flake8-bugbear
  "C4",  # comprehensions
  "SIM", # simplify (com exceções abaixo)
  "UP",  # pyupgrade (sugestões p/ versões mais novas)
  "PT",
  "RUF", # regras específicas do Ruff
]

preview = true

# Ignora regras indesejadas
ignore = [
  "G004",    # f-string em logging
  "SIM103",  # (desligada conforme pedido)
  # Permite "else após return/break/continue"
  "RET505",  # else after return
  "RET506",  # else after raise
  "RET507",  # else after continue
  "RET508",  # else after break,
  "D2",      # Ignore docstring formatting rules
  "D3",      # Ignore docstring summary line rules
  "D4",      # Ignore docstring content rules
]

extend-select = ["D100", "D101", "D102", "D103", "D104", "D105", "D107", "E301", "E302", "E303", "E304", "E305", "E306", "D202"]

# Ignora arquivos específicos
exclude = [
    "**/__init__.py",
    "**/*.ipynb"
]

[tool.ruff.lint.isort]
# Mantém padrão consistente de imports
combine-as-imports = true
force-sort-within-sections = true
split-on-trailing-comma = true
known-first-party = ["car_system_agentic_ai"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
preview = false

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
ignore_missing_imports = true

# Ignore notebooks and __init__ files
exclude = [
    "notebooks/.*",
    ".*/__init__.py"
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
